// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user{
  id                  String   @id    @default(uuid())
  email               String   @unique  
  password            String?  //null until user sets it
  confirmed           Boolean  @default(false)
  verificationToken   String?   //hashed token, valid until expire
  tokenExpiry         DateTime?
  createdAt           DateTime  @default(now())   
  updatedAt           DateTime  @updatedAt

  websites  website[]
}

model website{
  id          String    @id     @default(uuid())
  url         String  
  userId      String
  timeAdded   DateTime
  ticks       website_tick[]
  user        user      @relation(fields: [userId],references: [id])

  @@unique([userId, url], name: "userId_url_unique") 
}

model region{
  id          String    @id     @default(uuid())
  name        String    @unique
  ticks       website_tick[]
}

model website_tick{
  id                String    @id     @default(uuid())
  response_time_ms  Int
  status            website_status
  region_id         String
  website_id        String
  createdAt         DateTime  @default(now())

  region            region  @relation(fields: [region_id],references: [id])
  website           website @relation(fields: [website_id],references: [id],onDelete: Cascade)
}
enum website_status {
  Up
  Down
  Unknown
}